buildscript {
    repositories {
        maven { url 'https://dl.google.com/dl/android/maven2/' }
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.5.4'
    }
}

apply plugin: 'groovy'
apply plugin: 'maven'

archivesBaseName = DESCRIPTION
group = GROUP_ID
version = VERSION_NAME

def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath

repositories {
    maven { url 'https://dl.google.com/dl/android/maven2/' }
    mavenLocal()
    jcenter()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation gradleApi()
    implementation localGroovy()
    compile files('libs/jclasslib-library.jar')
    implementation 'com.android.tools.build:gradle:3.0.1'
    compile 'com.squareup:javapoet:1.8.0'
    compile 'org.jooq:joor:0.9.6'
}

uploadArchives {
    configuration = configurations.archives
    repositories {
        mavenDeployer {
//            repository(url: localMavenRepo)
            repository(url: MAVEN_URL) {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
            pom.project {
                version VERSION_NAME
                artifactId ARTIFACT_ID
                groupId GROUP_ID
                packaging TYPE
                description DESCRIPTION
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    group BasePlugin.BUILD_GROUP
    description = 'Assembles a jar archive containing the main sources of this project.'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

jar {
    manifest {
        attributes(
                "Manifest-Version": VERSION_NAME,
                "Main-Class": GROUP_ID)
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}